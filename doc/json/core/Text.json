{
    "content": {
        "Methods": {
            "_enableSizeUpdate": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_scheduleUpdateSize": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_setText": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_updateSize": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_updateSizeImpl": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_updateStyle": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "_updateWSHandling": {
                "internal": "false", 
                "text": ""
            }, 
            "constructor": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "getClass": {
                "internal": "false", 
                "text": ""
            }, 
            "on": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "onChanged": {
                "internal": "true", 
                "params": [], 
                "text": "@private"
            }, 
            "onColorChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onHeightChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onHorizontalAlignmentChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onRecursiveVisibleChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onTextChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onTextFormatChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onVerticalAlignmentChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onWidthChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "onWrapModeChanged": {
                "internal": "true", 
                "text": ""
            }, 
            "registerStyle": {
                "internal": "false", 
                "text": ""
            }
        }, 
        "Properties": {
            "color": {
                "defaultValue": "", 
                "internal": "false", 
                "text": "color of the text", 
                "type": "color"
            }, 
            "font": {
                "defaultValue": "Font", 
                "internal": "false", 
                "text": "text font object", 
                "type": "lazy"
            }, 
            "paintedHeight": {
                "defaultValue": "", 
                "internal": "false", 
                "text": "real height of this text without any layout applied", 
                "type": "int"
            }, 
            "paintedWidth": {
                "defaultValue": "", 
                "internal": "false", 
                "text": "real width of the text without any layout applied", 
                "type": "int"
            }, 
            "shadow": {
                "defaultValue": "Shadow", 
                "internal": "false", 
                "text": "text shadow object", 
                "type": "lazy"
            }, 
            "text": {
                "defaultValue": "", 
                "internal": "false", 
                "text": "text to be displayed", 
                "type": "string"
            }
        }
    }, 
    "name": "core.Text", 
    "text": "item with text"
}