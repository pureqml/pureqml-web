4b0da13aa7ec1a92dcd033b5dc1edbac6cc51459
ccopy_reg
_reconstructor
p1
(ccompiler.pyparsing
ParseResults
p2
c__builtin__
object
p3
NtRp4
((lp5
g1
(ccompiler.lang
Component
p6
g3
NtRp7
(dp8
S'doc'
p9
NsS'name'
p10
S'Object'
p11
sS'children'
p12
g1
(g2
g3
NtRp13
((lp14
g1
(ccompiler.lang
Property
p15
g3
NtRp16
(dp17
g9
NsS'lazy'
p18
I00
sS'type'
p19
S'bool'
p20
sS'properties'
p21
(lp22
(S'macAccessable'
S'(false)'
tp23
asbag1
(ccompiler.lang
Method
p24
g3
NtRp25
(dp26
S'code'
p27
S'{\n\t\tvar deviceString = this._context.system.os + "_" + this._context.system.browser\n\t\tdeviceString = deviceString.replace(/\\s/g, \'\')\n\t\tcallback(deviceString)\n\t}'
p28
sg9
NsS'args'
p29
g1
(g2
g3
NtRp30
((lp31
S'callback'
p32
a((dN(dp33
Nttbsg10
g1
(g2
g3
NtRp34
((lp35
S'getDeviceId'
p36
a((dN(dp37
NttbsS'event'
p38
I01
sbag1
(g24
g3
NtRp39
(dp40
g27
S'{ callback("") }'
p41
sg9
Nsg29
g1
(g2
g3
NtRp42
((lp43
S'callback'
p44
a((dN(dp45
Nttbsg10
g1
(g2
g3
NtRp46
((lp47
S'getMacAddress'
p48
a((dN(dp49
Nttbsg38
I01
sba((dN(dp50
Nttbsba((dN(dp51
Nttb.